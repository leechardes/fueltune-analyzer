# =============================================
# FuelTune Streamlit - Helm Values
# =============================================
# Default values for fueltune chart

# =============================================
# Global Configuration
# =============================================
global:
  imageRegistry: "ghcr.io"
  imagePullSecrets: []
  storageClass: ""

# =============================================
# Application Configuration
# =============================================
app:
  name: fueltune
  version: "1.0.0"
  environment: production

# =============================================
# Image Configuration
# =============================================
image:
  registry: ghcr.io
  repository: fueltune/streamlit
  tag: "latest"
  pullPolicy: IfNotPresent
  pullSecrets: []

# =============================================
# Deployment Configuration
# =============================================
replicaCount: 3

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# =============================================
# Resources Configuration
# =============================================
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# =============================================
# Auto Scaling Configuration
# =============================================
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# =============================================
# Pod Disruption Budget
# =============================================
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# =============================================
# Service Configuration
# =============================================
service:
  type: ClusterIP
  port: 80
  targetPort: 8501
  annotations: {}

# =============================================
# Ingress Configuration
# =============================================
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: fueltune.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: fueltune-tls-secret
      hosts:
        - fueltune.example.com

# =============================================
# Health Checks Configuration
# =============================================
healthChecks:
  liveness:
    enabled: true
    path: /_stcore/health
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  
  readiness:
    enabled: true
    path: /_stcore/health
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  startup:
    enabled: true
    path: /_stcore/health
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 12

# =============================================
# Environment Variables
# =============================================
env:
  # Application Settings
  APP_NAME: "FuelTune Streamlit"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  APP_ENV: "production"
  
  # Streamlit Settings
  STREAMLIT_SERVER_PORT: "8501"
  STREAMLIT_SERVER_ADDRESS: "0.0.0.0"
  STREAMLIT_SERVER_HEADLESS: "true"
  STREAMLIT_BROWSER_GATHER_USAGE_STATS: "false"
  
  # Data Processing
  MAX_FILE_SIZE: "50MB"
  ALLOWED_EXTENSIONS: "csv,xlsx,xls"
  FUELTECH_FIELDS_COUNT: "64"
  CACHE_EXPIRY_HOURS: "24"

# =============================================
# Secrets Configuration
# =============================================
secrets:
  # Database secrets
  database:
    enabled: true
    name: fueltune-database-secret
    keys:
      url: database-url
      username: username
      password: password
  
  # Redis secrets
  redis:
    enabled: true
    name: fueltune-redis-secret
    keys:
      url: redis-url
      password: password

# =============================================
# ConfigMap Configuration
# =============================================
configMap:
  enabled: true
  name: fueltune-config

# =============================================
# Security Context
# =============================================
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# =============================================
# Service Account
# =============================================
serviceAccount:
  create: true
  annotations: {}
  name: "fueltune-service-account"

# =============================================
# Pod Security Policy
# =============================================
podSecurityPolicy:
  enabled: false

# =============================================
# Network Policy
# =============================================
networkPolicy:
  enabled: false
  ingress:
    enabled: true
    from: []
  egress:
    enabled: true
    to: []

# =============================================
# Persistence Configuration
# =============================================
persistence:
  data:
    enabled: true
    storageClass: "fast-ssd"
    accessMode: ReadWriteMany
    size: 10Gi
    annotations: {}
  
  logs:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteMany
    size: 5Gi
    annotations: {}

# =============================================
# Database Configuration (PostgreSQL)
# =============================================
postgresql:
  enabled: false  # Use external database
  auth:
    postgresPassword: ""
    username: fueltune
    password: ""
    database: fueltune_prod
  primary:
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        cpu: 2000m
        memory: 2Gi
      requests:
        cpu: 1000m
        memory: 1Gi

# =============================================
# Redis Configuration
# =============================================
redis:
  enabled: false  # Use external Redis
  auth:
    enabled: true
    password: ""
  master:
    persistence:
      enabled: true
      size: 5Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# =============================================
# Monitoring Configuration
# =============================================
monitoring:
  enabled: true
  
  # Prometheus ServiceMonitor
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    labels: {}
    annotations: {}
  
  # Prometheus Rules
  prometheusRule:
    enabled: true
    labels: {}
    rules:
      - alert: FuelTuneHighCPU
        expr: (rate(container_cpu_usage_seconds_total{pod=~"fueltune-.*"}[5m]) * 100) > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on FuelTune pod"
          description: "CPU usage is above 80% for more than 2 minutes"
      
      - alert: FuelTuneHighMemory
        expr: (container_memory_working_set_bytes{pod=~"fueltune-.*"} / container_spec_memory_limit_bytes{pod=~"fueltune-.*"}) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on FuelTune pod"
          description: "Memory usage is above 80% for more than 2 minutes"
      
      - alert: FuelTuneDown
        expr: up{job="fueltune"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "FuelTune application is down"
          description: "FuelTune application has been down for more than 1 minute"
  
  # Prometheus
  prometheus:
    enabled: false  # Use external Prometheus
  
  # Grafana
  grafana:
    enabled: false  # Use external Grafana

# =============================================
# Backup Configuration
# =============================================
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention: 30
  storage:
    enabled: true
    size: 20Gi
    storageClass: "standard"

# =============================================
# Node Affinity and Tolerations
# =============================================
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - fueltune
          topologyKey: kubernetes.io/hostname

# =============================================
# Pod Annotations and Labels
# =============================================
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8501"
  prometheus.io/path: "/metrics"

podLabels: {}

# =============================================
# Init Containers
# =============================================
initContainers: []

# =============================================
# Sidecar Containers
# =============================================
sidecars: []

# =============================================
# Extra Volumes
# =============================================
extraVolumes: []

# =============================================
# Extra Volume Mounts
# =============================================
extraVolumeMounts: []

# =============================================
# Tests Configuration
# =============================================
tests:
  enabled: true
  image:
    repository: curlimages/curl
    tag: latest
    pullPolicy: IfNotPresent